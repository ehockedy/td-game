Client renderer optimisations:
 (based on quick observations and profiling)
 - Profiling suggests that client is rendering 3 times as fast as server is sending, so can reduce the render rate.
Make sure that a bullet that is within the hitbox of an enemy, is not actually in an adjacent box
 - or, make sure to check all 3*3 grid of bullets around each enemy
Sort out even cols infinite loop issue
 -  odd sided grids get stuck in infinite loop - I assume becuase can never meet the end condition since steps are take as multiples of 2 so that no bit of path is adjacent!
Bullet movement tests
Fix the fact that Point has hard coded sub grid size set - in tests have seen that using a different subgrid size to the default, they still pass
 - enemy tests are find because poit is not used - just goes through pre generated path
 - but in bullet tests Point is used, and still passes - meaning that as far as the bullet is concerned it shoudl not be in a different square
Remove the events from a client view on stopRendering
If player does nothing for 2ish minutes, they are disconnected and cannot reconnect, would have to join game again. If they interact with the map will cause server error because they are at the 
game screen, with a new, different game code.
Remove any decorations on map that are below a tower when the tower is placed.
Use volatile events for server -> client state updates - if miss one no need to buffer as just need the latest update

Main features:
 - specific enemy distribution per round
 - save game behaviour
 - player leaves game behaviour
 - different modes
    - survival - no individual points, just team with set number of lives
    - competitive - each player has points, no lives
    - competitive survival - each player gets indivdual points, and team lives

Next:
 - mark maps as easy/medium/hard
 - incorporate money spent into final score
 - test with multiple players
 - multiple lives lost for stronger enemies
 - tidy session addSocket function, and make it so does not actually add socket if not valid player etc.
 - do not tidy up games as frequently as currently do - add some length of game
 - dev/prod modew in webpack + AWS deployment
 - Don't delete game if single player leaves

Bugs:
 - disconnecting client after no activity - I think only in menus?
 - main menu wait, game times out, press start game, user cannot chsnge namee

EC2 initial set up:
 - https://docs.aws.amazon.com/codedeploy/latest/userguide/codedeploy-agent-operations-install-linux.html
 - https://docs.aws.amazon.com/codepipeline/latest/userguide/tutorials-simple-codecommit.html

EC2 setup TO automate:
 - yarn install npm
 - https://repost.aws/knowledge-center/ec2-memory-swap-file - increase to 4gb
 - npm install
 - npm start
 - Access directly at http://3.10.209.134:8000/ - Not HTTPS
    - double check whether instance port setting is required

to do: try not sending client and server packages
 - also try prod mode build??